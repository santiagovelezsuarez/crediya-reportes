buildscript {
	ext {
		cleanArchitectureVersion = '3.26.1'
		springBootVersion = '3.5.4'
		sonarVersion = '6.3.1.5724'
		jacocoVersion = '0.8.13'
		pitestVersion = '1.19.0-rc.1'
        lombokVersion = '1.18.38'
        springDocVersion = '2.8.11'
	}
}

plugins {
	id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
	id 'org.springframework.boot' version "${springBootVersion}" apply false
	id 'info.solidsoft.pitest' version "${pitestVersion}" apply false
	id 'org.sonarqube' version "${sonarVersion}"
	id 'jacoco'
}

sonar {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions",
                        "**/MainApplication.java," +
                        "**/*Application.java," +
                        "**/*Config.java," +
                        "**/config/**," +
                        "**/dto/**," +
                        "**/*DTO.java," +
                        "**/exception/**," +
                        "**/exception/**/**," +
                        "**/mapper/**," +
                        "**/helper/**," +
                        "**/gateways/**," +
                        "**/*Enum.java," +
                        "**/*Request.java," +
                        "**/*Response.java"
        property "sonar.tests", "src/test"
        property "sonar.java.binaries", "**/build/classes/java/main"
        property "sonar.junit.reportsPath", "**/build/test-results/test"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.pitest.reportPaths", "build/reports/pitest/mutations.xml"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'info.solidsoft.pitest'

    pitest {
        targetClasses = ['co.pragma.*']
        targetTests = ['co.pragma.*Test']
        pitestVersion = '1.15.0'
        junit5PluginVersion = '1.0.0'
    }
}

tasks.named("sonar").configure {
    dependsOn(":jacocoMergedReport")
}

apply from: './main.gradle'
